{"ast":null,"code":"var _jsxFileName = \"/Users/invitado/quizzer/client/src/contexts/CategoriasContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, createContext, useEffect } from 'react';\nimport DataPreguntasDeportes from '../Categorias/DeportesPreguntas/DataPreguntasDeportes';\nimport DataPreguntasHistoria from '../Categorias/HistoriaPreguntas/DataPreguntasHistoria';\nimport DataPreguntasGeografia from '../Categorias/GeografiaPreguntas/DataPreguntasGeografia';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CategoriasContext = /*#__PURE__*/createContext();\nexport const useCategoria = () => {\n  _s();\n\n  return useContext(CategoriasContext);\n};\n\n_s(useCategoria, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const CategoriasProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [timer, setTimer] = useState(60);\n  let randomNumberDeportes = Math.floor(Math.random() * DataPreguntasDeportes.length);\n  let randomNumberHistoria = Math.floor(Math.random() * DataPreguntasHistoria.length);\n  let randomNumberGeografia = Math.floor(Math.random() * DataPreguntasGeografia.length);\n  const [switche, setSwitche] = useState(false);\n  const [count, setCount] = useState(0);\n  const [preguntaDeportes, setPreguntaDeportes] = useState([DataPreguntasDeportes[randomNumberDeportes]]);\n  const [preguntaHistoria, setPreguntaHistoria] = useState([DataPreguntasHistoria[randomNumberHistoria]]);\n  const [preguntaGeografia, setPreguntaGeografia] = useState([DataPreguntasGeografia[randomNumberGeografia]]);\n  const [success, setSuccess] = useState(false);\n  const optionIndex = [1, 2, 3, 4];\n  let messageDeportes = `http://web.whatsapp.com/send?text=Te reto a responder más preguntas correctas sobre Deportes que yo! Mi puntuación fué: ${count}, entrá a quizzerproject.netlify.app`;\n  let messageHistoria = `http://web.whatsapp.com/send?text=Te reto a responder más preguntas correctas sobre Historia que yo! Mi puntuación fué: ${count}, entrá a quizzerproject.netlify.app`;\n  let messageGeografia = `http://web.whatsapp.com/send?text=Te reto a responder más preguntas correctas sobre Geografia que yo! Mi puntuación fué: ${count}, entrá a quizzerproject.netlify.app`; //global controllers\n\n  const desordenarLista = () => {\n    let randomIndex = Math.floor(Math.random() * optionIndex.length);\n    document.getElementById(\"optn_1\").style.order = optionIndex.splice(randomIndex, 1);\n    document.getElementById(\"optn_2\").style.order = optionIndex.splice(randomIndex, 1);\n    document.getElementById(\"optn_3\").style.order = optionIndex.splice(randomIndex, 1);\n    document.getElementById(\"correcta\").style.order = optionIndex.splice(randomIndex, 1);\n  };\n\n  const wrong = event => {\n    event.target.setAttribute('class', 'bg-danger');\n    setTimeout(() => {\n      event.target.classList.remove('bg-danger');\n    }, 60);\n  };\n\n  const right = () => {\n    setSuccess(true);\n    setTimeout(() => {\n      setSuccess(false);\n    }, 60);\n    setCount(count + 1);\n    setSwitche(true);\n    setTimeout(() => {\n      setSwitche(false);\n    }, 500);\n  };\n\n  const runTimer = () => {\n    if (timer > 0) {\n      setTimeout(() => {\n        setTimer(timer - 1);\n      }, 1000);\n    }\n  }; //deportes controllers\n\n\n  const getQuestionDeportes = event => {\n    wrong(event);\n    let randomNumber = Math.floor(Math.random() * DataPreguntasDeportes.length);\n    setPreguntaDeportes(DataPreguntasDeportes.splice(randomNumber, 1));\n    setTimeout(() => {\n      desordenarLista();\n    }, 60);\n  };\n\n  const acertadaDeportes = () => {\n    right();\n    let randomNumber = Math.floor(Math.random() * DataPreguntasDeportes.length);\n    setPreguntaDeportes(DataPreguntasDeportes.splice(randomNumber, 1));\n    setTimeout(() => {\n      desordenarLista();\n    }, 60);\n  }; // historia controllers \n\n\n  const getQuestionHistoria = event => {\n    wrong(event);\n    let randomNumber = Math.floor(Math.random() * DataPreguntasHistoria.length);\n    setPreguntaHistoria(DataPreguntasHistoria.splice(randomNumber, 1));\n    setTimeout(() => {\n      desordenarLista();\n    }, 60);\n  };\n\n  const acertadaHistoria = () => {\n    right();\n    let randomNumber = Math.floor(Math.random() * DataPreguntasHistoria.length);\n    setPreguntaHistoria(DataPreguntasHistoria.splice(randomNumber, 1));\n    setTimeout(() => {\n      desordenarLista();\n    }, 60);\n  }; // geografia controllers \n\n\n  const getQuestionGeografia = event => {\n    wrong(event);\n    let randomNumber = Math.floor(Math.random() * DataPreguntasGeografia.length);\n    setPreguntaGeografia(DataPreguntasHistoria.splice(randomNumber, 1));\n    setTimeout(() => {\n      desordenarLista();\n    }, 60);\n  };\n\n  const acertadaGeografia = () => {\n    right();\n    let randomNumber = Math.floor(Math.random() * DataPreguntasGeografia.length);\n    setPreguntaGeografia(DataPreguntasGeografia.splice(randomNumber, 1));\n    setTimeout(() => {\n      desordenarLista();\n    }, 60);\n  };\n\n  useEffect(() => {\n    runTimer();\n  }, [timer]);\n  const value = {\n    acertadaDeportes,\n    acertadaHistoria,\n    acertadaGeografia,\n    getQuestionDeportes,\n    getQuestionHistoria,\n    getQuestionGeografia,\n    runTimer,\n    switche,\n    count,\n    success,\n    preguntaDeportes,\n    preguntaHistoria,\n    preguntaGeografia,\n    optionIndex,\n    messageDeportes,\n    messageGeografia,\n    messageHistoria,\n    timer,\n    DataPreguntasHistoria\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CategoriasContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s2(CategoriasProvider, \"mJSJaarnm8f65TiyOwsokezl4/Q=\");\n\n_c = CategoriasProvider;\nexport default CategoriasProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoriasProvider\");","map":{"version":3,"sources":["/Users/invitado/quizzer/client/src/contexts/CategoriasContext.js"],"names":["React","useContext","useState","createContext","useEffect","DataPreguntasDeportes","DataPreguntasHistoria","DataPreguntasGeografia","CategoriasContext","useCategoria","CategoriasProvider","children","timer","setTimer","randomNumberDeportes","Math","floor","random","length","randomNumberHistoria","randomNumberGeografia","switche","setSwitche","count","setCount","preguntaDeportes","setPreguntaDeportes","preguntaHistoria","setPreguntaHistoria","preguntaGeografia","setPreguntaGeografia","success","setSuccess","optionIndex","messageDeportes","messageHistoria","messageGeografia","desordenarLista","randomIndex","document","getElementById","style","order","splice","wrong","event","target","setAttribute","setTimeout","classList","remove","right","runTimer","getQuestionDeportes","randomNumber","acertadaDeportes","getQuestionHistoria","acertadaHistoria","getQuestionGeografia","acertadaGeografia","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState, createContext, useEffect } from 'react';\nimport DataPreguntasDeportes from '../Categorias/DeportesPreguntas/DataPreguntasDeportes'\nimport DataPreguntasHistoria from '../Categorias/HistoriaPreguntas/DataPreguntasHistoria'\nimport DataPreguntasGeografia from '../Categorias/GeografiaPreguntas/DataPreguntasGeografia'\n\n\n\nconst CategoriasContext = createContext();\nexport const useCategoria = () => {\n    return useContext(CategoriasContext)\n}\n\nexport const CategoriasProvider = ({ children }) => {\n    \n    const [timer, setTimer] = useState(60);\n    let randomNumberDeportes = Math.floor(Math.random() * DataPreguntasDeportes.length);\n    let randomNumberHistoria = Math.floor(Math.random() * DataPreguntasHistoria.length);\n    let randomNumberGeografia = Math.floor(Math.random() * DataPreguntasGeografia.length);\n    const [switche, setSwitche] = useState(false)\n    const [count, setCount] = useState(0)\n    const [preguntaDeportes, setPreguntaDeportes] = useState([DataPreguntasDeportes[randomNumberDeportes]])\n    const [preguntaHistoria, setPreguntaHistoria] = useState([DataPreguntasHistoria[randomNumberHistoria]])\n    const [preguntaGeografia, setPreguntaGeografia] = useState([DataPreguntasGeografia[randomNumberGeografia]])\n    const [success, setSuccess] = useState(false);\n    const optionIndex = [1, 2, 3, 4];\n    let messageDeportes = `http://web.whatsapp.com/send?text=Te reto a responder más preguntas correctas sobre Deportes que yo! Mi puntuación fué: ${count}, entrá a quizzerproject.netlify.app`\n    let messageHistoria = `http://web.whatsapp.com/send?text=Te reto a responder más preguntas correctas sobre Historia que yo! Mi puntuación fué: ${count}, entrá a quizzerproject.netlify.app`\n    let messageGeografia = `http://web.whatsapp.com/send?text=Te reto a responder más preguntas correctas sobre Geografia que yo! Mi puntuación fué: ${count}, entrá a quizzerproject.netlify.app`\n\n\n\n    //global controllers\n    const desordenarLista = () => {\n\n        let randomIndex = Math.floor(Math.random() * optionIndex.length);\n        document.getElementById(\"optn_1\").style.order = optionIndex.splice(randomIndex, 1)\n        document.getElementById(\"optn_2\").style.order = optionIndex.splice(randomIndex, 1)\n        document.getElementById(\"optn_3\").style.order = optionIndex.splice(randomIndex, 1)\n        document.getElementById(\"correcta\").style.order = optionIndex.splice(randomIndex, 1)\n    }\n    const wrong = (event) => {\n        event.target.setAttribute('class', 'bg-danger')\n        setTimeout(() => {\n            event.target.classList.remove('bg-danger')\n        }, 60)\n    }\n\n    const right = () => {\n        setSuccess(true);\n        setTimeout(() => {\n            setSuccess(false)\n        }, 60)\n        setCount(count + 1);\n        setSwitche(true);\n        setTimeout(() => {\n            setSwitche(false)\n        }, 500)\n    }\n\n\n    const runTimer = () => {\n        if (timer > 0) {\n            setTimeout(() => { setTimer(timer - 1) }, 1000)\n        }\n\n\n    }\n\n    //deportes controllers\n\n    const getQuestionDeportes = (event) => {\n        wrong(event);\n        let randomNumber = Math.floor(Math.random() * DataPreguntasDeportes.length);\n        setPreguntaDeportes(DataPreguntasDeportes.splice(randomNumber, 1))\n        setTimeout(() => {\n            desordenarLista();\n        }, 60)\n    }\n\n    const acertadaDeportes = () => {\n\n        right();\n        let randomNumber = Math.floor(Math.random() * DataPreguntasDeportes.length);\n        setPreguntaDeportes(DataPreguntasDeportes.splice(randomNumber, 1));\n        setTimeout(() => {\n            desordenarLista();\n        }, 60)\n    }\n  \n \n    // historia controllers \n\n    const getQuestionHistoria = (event) => {\n\n        wrong(event);\n        let randomNumber = Math.floor(Math.random() * DataPreguntasHistoria.length);\n        setPreguntaHistoria(DataPreguntasHistoria.splice(randomNumber, 1));\n        setTimeout(() => {\n            desordenarLista();\n        }, 60)\n    }\n\n    const acertadaHistoria = () => {\n        right();\n        let randomNumber = Math.floor(Math.random() * DataPreguntasHistoria.length);\n        setPreguntaHistoria(DataPreguntasHistoria.splice(randomNumber, 1));\n        setTimeout(() => {\n            desordenarLista();\n        }, 60)\n    }\n\n    // geografia controllers \n\n    const getQuestionGeografia = (event) => {\n        wrong(event);\n        let randomNumber = Math.floor(Math.random() * DataPreguntasGeografia.length);\n        setPreguntaGeografia(DataPreguntasHistoria.splice(randomNumber, 1));\n        setTimeout(() => {\n            desordenarLista();\n        }, 60)\n    }\n\n    const acertadaGeografia = () => {\n        right();\n        let randomNumber = Math.floor(Math.random() * DataPreguntasGeografia.length);\n        setPreguntaGeografia(DataPreguntasGeografia.splice(randomNumber, 1));\n        setTimeout(() => {\n            desordenarLista();\n        }, 60)\n    }\n\n\n\n\n    useEffect(() => {\n        runTimer();\n    }, [timer])\n\n\n    const value = {\n        acertadaDeportes,\n        acertadaHistoria,\n        acertadaGeografia,\n        getQuestionDeportes,\n        getQuestionHistoria,\n        getQuestionGeografia,\n        runTimer,\n        switche,\n        count,\n        success,\n        preguntaDeportes,\n        preguntaHistoria,\n        preguntaGeografia,\n        optionIndex,\n        messageDeportes,\n        messageGeografia,\n        messageHistoria,\n        timer,\n        DataPreguntasHistoria,\n        \n       \n    }\n    return (\n        <>\n            <CategoriasContext.Provider value={value}>\n                {children}\n            </CategoriasContext.Provider>\n        </>\n    )\n}\n\nexport default CategoriasProvider"]},"metadata":{},"sourceType":"module"}