{"ast":null,"code":"import _slicedToArray from\"/Users/invitado/quizzer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import'../PreguntasStyle.css';import{useCategoria}from'../../contexts/CategoriasContext';import Axios from'axios';import{useAuth}from'../../contexts/AuthContext';import FinalMessage from'../finalMessage';import CategoriasProto from'../CategoriasProto';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PreguntasGeografia=function PreguntasGeografia(){var _useAuth=useAuth(),currentUser=_useAuth.currentUser,db=_useAuth.db;var _useState=useState(),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),highScore=_useState4[0],setHighScore=_useState4[1];var _useCategoria=useCategoria(),acertadaGeografia=_useCategoria.acertadaGeografia,getQuestionGeografia=_useCategoria.getQuestionGeografia,count=_useCategoria.count,preguntaGeografia=_useCategoria.preguntaGeografia,messageGeografia=_useCategoria.messageGeografia,timer=_useCategoria.timer;if(timer===0){if(count>highScore){Axios.put('https://quizzerproject.herokuapp.com/updateGeography',{id:user[0]._id,highScoreGeography:count});}}useEffect(function(){var dbUser=db.filter(function(x){return x.userName===currentUser.displayName;});setUser(dbUser);setHighScore(dbUser[0].highScoreGeography);},[currentUser.displayName,db]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"preguntas\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"text-center\",children:\"Categor\\xEDa en proceso...\"})})});};export default PreguntasGeografia;","map":{"version":3,"sources":["/Users/invitado/quizzer/client/src/Categorias/GeografiaPreguntas/PreguntasGeografia.js"],"names":["React","useEffect","useState","useCategoria","Axios","useAuth","FinalMessage","CategoriasProto","PreguntasGeografia","currentUser","db","user","setUser","highScore","setHighScore","acertadaGeografia","getQuestionGeografia","count","preguntaGeografia","messageGeografia","timer","put","id","_id","highScoreGeography","dbUser","filter","x","userName","displayName"],"mappings":"qJAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,MAAO,uBAAP,CACA,OAASC,YAAT,KAA6B,kCAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,4BAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,eAAP,KAA4B,oBAA5B,C,gGAIA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAE7B,aAA4BH,OAAO,EAAnC,CAAQI,WAAR,UAAQA,WAAR,CAAqBC,EAArB,UAAqBA,EAArB,CACA,cAAwBR,QAAQ,EAAhC,wCAAOS,IAAP,eAAYC,OAAZ,eACA,eAAkCV,QAAQ,EAA1C,yCAAOW,SAAP,eAAkBC,YAAlB,eACA,kBAQIX,YAAY,EARhB,CACIY,iBADJ,eACIA,iBADJ,CAEIC,oBAFJ,eAEIA,oBAFJ,CAGIC,KAHJ,eAGIA,KAHJ,CAIIC,iBAJJ,eAIIA,iBAJJ,CAKIC,gBALJ,eAKIA,gBALJ,CAMIC,KANJ,eAMIA,KANJ,CAUA,GAAIA,KAAK,GAAK,CAAd,CAAiB,CACb,GAAGH,KAAK,CAAGJ,SAAX,CAAqB,CACjBT,KAAK,CAACiB,GAAN,CAAU,sDAAV,CAAkE,CAC9DC,EAAE,CAAEX,IAAI,CAAC,CAAD,CAAJ,CAAQY,GADkD,CAE9DC,kBAAkB,CAAEP,KAF0C,CAAlE,EAKH,CACH,CAEDhB,SAAS,CAAE,UAAM,CACf,GAAIwB,CAAAA,MAAM,CAAGf,EAAE,CAACgB,MAAH,CAAU,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,QAAF,GAAenB,WAAW,CAACoB,WAA/B,EAAX,CAAb,CACEjB,OAAO,CAACa,MAAD,CAAP,CACAX,YAAY,CAACW,MAAM,CAAC,CAAD,CAAN,CAAUD,kBAAX,CAAZ,CAEH,CALQ,CAKN,CAACf,WAAW,CAACoB,WAAb,CAA0BnB,EAA1B,CALM,CAAT,CAOD,mBACK,sCACG,YAAK,SAAS,CAAC,WAAf,uBACI,WAAI,SAAS,CAAC,aAAd,wCADJ,EADH,EADL,CAQH,CAxCD,CA0CA,cAAeF,CAAAA,kBAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport '../PreguntasStyle.css';\nimport { useCategoria } from '../../contexts/CategoriasContext'\nimport Axios from 'axios'\nimport { useAuth } from '../../contexts/AuthContext'\nimport FinalMessage from '../finalMessage'\nimport CategoriasProto from '../CategoriasProto'\n\n\n\nconst PreguntasGeografia = () => {\n\n    const { currentUser, db } = useAuth();\n    const [user,setUser ] = useState()\n    const [highScore, setHighScore] = useState()\n    const {\n        acertadaGeografia,\n        getQuestionGeografia,\n        count,\n        preguntaGeografia,\n        messageGeografia,\n        timer,\n       \n    } = useCategoria();\n\n    if (timer === 0) {\n        if(count > highScore){\n            Axios.put('https://quizzerproject.herokuapp.com/updateGeography', {\n                id: user[0]._id,\n                highScoreGeography: count\n               \n            })\n        }\n     }\n \n     useEffect( () => {\n       let dbUser = db.filter(x => x.userName === currentUser.displayName);\n         setUser(dbUser)\n         setHighScore(dbUser[0].highScoreGeography)\n \n     }, [currentUser.displayName, db])\n   \n    return (\n         <>\n            <div className='preguntas'>\n                <h2 className=\"text-center\">Categor√≠a en proceso...</h2>\n            </div>\n        </>\n\n    )\n}\n\nexport default PreguntasGeografia;"]},"metadata":{},"sourceType":"module"}