{"ast":null,"code":"var _jsxFileName = \"/Users/invitado/quizzer/client/src/Categorias/HistoriaPreguntas/PreguntasHistoria.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../PreguntasStyle.css';\nimport { useCategoria } from '../../contexts/CategoriasContext';\nimport { useAuth } from '../../contexts/AuthContext';\nimport Axios from 'axios';\nimport FinalMessage from '../finalMessage';\nimport CategoriasProto from '../CategoriasProto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PreguntasHistoria = () => {\n  _s();\n\n  const {\n    currentUser,\n    db\n  } = useAuth();\n  const [user, setUser] = useState();\n  const [highScore, setHighScore] = useState();\n  const {\n    acertadaHistoria,\n    getQuestionHistoria,\n    preguntaHistoria,\n    count,\n    timer,\n    messageHistoria\n  } = useCategoria();\n\n  if (timer === 0) {\n    if (count > highScore) {\n      Axios.put('https://quizzerproject.herokuapp.com/updateHistory', {\n        id: user[0]._id,\n        highScoreHistory: count\n      });\n    }\n  }\n\n  useEffect(() => {\n    let dbUser = db.filter(x => x.userName === currentUser.displayName);\n    setUser(dbUser);\n    setHighScore(dbUser[0].highScoreHistory);\n  }, [currentUser.displayName, db]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preguntas\",\n      children: timer > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(CategoriasProto, {\n          question: preguntaHistoria,\n          getQuestion: getQuestionHistoria,\n          acertada: acertadaHistoria,\n          count: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 24\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(FinalMessage, {\n          count: count,\n          message: messageHistoria\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 24\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this)\n  }, void 0, false);\n};\n\n_s(PreguntasHistoria, \"DP6r5PrVH/1CULIypVh0mU81p8M=\", false, function () {\n  return [useAuth, useCategoria];\n});\n\n_c = PreguntasHistoria;\nexport default PreguntasHistoria;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreguntasHistoria\");","map":{"version":3,"sources":["/Users/invitado/quizzer/client/src/Categorias/HistoriaPreguntas/PreguntasHistoria.js"],"names":["React","useState","useEffect","useCategoria","useAuth","Axios","FinalMessage","CategoriasProto","PreguntasHistoria","currentUser","db","user","setUser","highScore","setHighScore","acertadaHistoria","getQuestionHistoria","preguntaHistoria","count","timer","messageHistoria","put","id","_id","highScoreHistory","dbUser","filter","x","userName","displayName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,uBAAP;AACA,SAASC,YAAT,QAA6B,kCAA7B;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAE5B,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAsBN,OAAO,EAAnC;AACA,QAAM,CAACO,IAAD,EAAMC,OAAN,IAAkBX,QAAQ,EAAhC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,EAA1C;AACA,QAAM;AACDc,IAAAA,gBADC;AAEDC,IAAAA,mBAFC;AAGDC,IAAAA,gBAHC;AAIDC,IAAAA,KAJC;AAKDC,IAAAA,KALC;AAMDC,IAAAA;AANC,MAQGjB,YAAY,EARrB;;AAUK,MAAIgB,KAAK,KAAK,CAAd,EAAiB;AACd,QAAGD,KAAK,GAAGL,SAAX,EAAqB;AACjBR,MAAAA,KAAK,CAACgB,GAAN,CAAU,oDAAV,EAAgE;AAC5DC,QAAAA,EAAE,EAAEX,IAAI,CAAC,CAAD,CAAJ,CAAQY,GADgD;AAE5DC,QAAAA,gBAAgB,EAAEN;AAF0C,OAAhE;AAKH;AACH;;AAEDhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIuB,MAAM,GAAGf,EAAE,CAACgB,MAAH,CAAUC,CAAC,IAAIA,CAAC,CAACC,QAAF,KAAenB,WAAW,CAACoB,WAA1C,CAAb;AACEjB,IAAAA,OAAO,CAACa,MAAD,CAAP;AACAX,IAAAA,YAAY,CAACW,MAAM,CAAC,CAAD,CAAN,CAAUD,gBAAX,CAAZ;AAEH,GALQ,EAKN,CAACf,WAAW,CAACoB,WAAb,EAA0BnB,EAA1B,CALM,CAAT;AAOA,sBACG;AAAA,2BACG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKS,KAAK,GAAG,CAAR,gBACG;AAAA,+BACA,QAAC,eAAD;AAAiB,UAAA,QAAQ,EAAEF,gBAA3B;AAA6C,UAAA,WAAW,EAAED,mBAA1D;AAA+E,UAAA,QAAQ,EAAED,gBAAzF;AAA2G,UAAA,KAAK,EAAEG;AAAlH;AAAA;AAAA;AAAA;AAAA;AADA,uBADH,gBAKG;AAAA,+BACA,QAAC,YAAD;AAAc,UAAA,KAAK,EAAEA,KAArB;AAA4B,UAAA,OAAO,EAAEE;AAArC;AAAA;AAAA;AAAA;AAAA;AADA;AANR;AAAA;AAAA;AAAA;AAAA;AADH,mBADH;AAiBR,CAjDD;;GAAMZ,iB;UAE0BJ,O,EAWnBD,Y;;;KAbPK,iB;AAmDN,eAAeA,iBAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport '../PreguntasStyle.css';\nimport { useCategoria } from '../../contexts/CategoriasContext'\nimport { useAuth } from '../../contexts/AuthContext';\nimport Axios from 'axios'\nimport FinalMessage from '../finalMessage'\nimport CategoriasProto from '../CategoriasProto'\n\nconst PreguntasHistoria = () => {\n\n    const { currentUser, db } = useAuth();\n    const [user,setUser ] = useState()\n    const [highScore, setHighScore] = useState()\n    const { \n         acertadaHistoria,\n         getQuestionHistoria,\n         preguntaHistoria,\n         count,\n         timer,\n         messageHistoria,\n         \n         } = useCategoria();\n\n         if (timer === 0) {\n            if(count > highScore){\n                Axios.put('https://quizzerproject.herokuapp.com/updateHistory', {\n                    id: user[0]._id,\n                    highScoreHistory: count\n                   \n                })\n            }\n         }\n     \n         useEffect(() => {\n           let dbUser = db.filter(x => x.userName === currentUser.displayName);\n             setUser(dbUser)\n             setHighScore(dbUser[0].highScoreHistory)\n     \n         }, [currentUser.displayName, db])\n\n         return (\n            <>\n               <div className='preguntas'>\n                   {timer > 0 ?\n                       <>\n                       <CategoriasProto question={preguntaHistoria} getQuestion={getQuestionHistoria} acertada={acertadaHistoria} count={count} />\n                       </>\n                       :\n                       <>\n                       <FinalMessage count={count} message={messageHistoria} />\n                       </>\n                   }\n   \n               </div>\n           </>\n   \n       )\n}\n\nexport default PreguntasHistoria"]},"metadata":{},"sourceType":"module"}