{"ast":null,"code":"var _jsxFileName = \"/Users/invitado/quizzer/src/Categorias/GeografiaPreguntas/PreguntasGeografia.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport '../PreguntasStyle.css';\nimport { useCategoria } from '../../contexts/CategoriasContext';\nimport Axios from 'axios';\nimport { useAuth } from '../../contexts/AuthContext';\nimport FinalMessage from '../finalMessage';\nimport CategoriasProto from '../CategoriasProto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PreguntasGeografia = () => {\n  _s();\n\n  const {\n    currentUser,\n    db\n  } = useAuth();\n  const [user, setUser] = useState();\n  const [highScore, setHighScore] = useState();\n  const {\n    acertadaGeografia,\n    getQuestionGeografia,\n    count,\n    preguntaGeografia,\n    messageGeografia,\n    timer\n  } = useCategoria();\n\n  if (timer === 0) {\n    if (count > highScore) {\n      Axios.put('http://localhost:3001/updateGeography', {\n        id: user[0]._id,\n        highScoreGeography: count\n      });\n    }\n  }\n\n  useEffect(() => {\n    let dbUser = db.filter(x => x.userName === currentUser.displayName);\n    setUser(dbUser);\n    setHighScore(dbUser[0].highScoreGeography);\n  }, [currentUser.displayName, db]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preguntas\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Categor\\xEDa en proceso...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(PreguntasGeografia, \"6kYqluxjkMDseT2esOVKnuayWxo=\", false, function () {\n  return [useAuth, useCategoria];\n});\n\n_c = PreguntasGeografia;\nexport default PreguntasGeografia;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreguntasGeografia\");","map":{"version":3,"sources":["/Users/invitado/quizzer/src/Categorias/GeografiaPreguntas/PreguntasGeografia.js"],"names":["React","useEffect","useState","useCategoria","Axios","useAuth","FinalMessage","CategoriasProto","PreguntasGeografia","currentUser","db","user","setUser","highScore","setHighScore","acertadaGeografia","getQuestionGeografia","count","preguntaGeografia","messageGeografia","timer","put","id","_id","highScoreGeography","dbUser","filter","x","userName","displayName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,uBAAP;AACA,SAASC,YAAT,QAA6B,kCAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;;;;AAIA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAE7B,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAsBL,OAAO,EAAnC;AACA,QAAM,CAACM,IAAD,EAAMC,OAAN,IAAkBV,QAAQ,EAAhC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,EAA1C;AACA,QAAM;AACFa,IAAAA,iBADE;AAEFC,IAAAA,oBAFE;AAGFC,IAAAA,KAHE;AAIFC,IAAAA,iBAJE;AAKFC,IAAAA,gBALE;AAMFC,IAAAA;AANE,MAQFjB,YAAY,EARhB;;AAUA,MAAIiB,KAAK,KAAK,CAAd,EAAiB;AACb,QAAGH,KAAK,GAAGJ,SAAX,EAAqB;AACjBT,MAAAA,KAAK,CAACiB,GAAN,CAAU,uCAAV,EAAmD;AAC/CC,QAAAA,EAAE,EAAEX,IAAI,CAAC,CAAD,CAAJ,CAAQY,GADmC;AAE/CC,QAAAA,kBAAkB,EAAEP;AAF2B,OAAnD;AAKH;AACH;;AAEDhB,EAAAA,SAAS,CAAE,MAAM;AACf,QAAIwB,MAAM,GAAGf,EAAE,CAACgB,MAAH,CAAUC,CAAC,IAAIA,CAAC,CAACC,QAAF,KAAenB,WAAW,CAACoB,WAA1C,CAAb;AACEjB,IAAAA,OAAO,CAACa,MAAD,CAAP;AACAX,IAAAA,YAAY,CAACW,MAAM,CAAC,CAAD,CAAN,CAAUD,kBAAX,CAAZ;AAEH,GALQ,EAKN,CAACf,WAAW,CAACoB,WAAb,EAA0BnB,EAA1B,CALM,CAAT;AAOD,sBACK;AAAA,2BACG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADH,mBADL;AAQH,CAxCD;;GAAMF,kB;UAE0BH,O,EAWxBF,Y;;;KAbFK,kB;AA0CN,eAAeA,kBAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport '../PreguntasStyle.css';\nimport { useCategoria } from '../../contexts/CategoriasContext'\nimport Axios from 'axios'\nimport { useAuth } from '../../contexts/AuthContext'\nimport FinalMessage from '../finalMessage'\nimport CategoriasProto from '../CategoriasProto'\n\n\n\nconst PreguntasGeografia = () => {\n\n    const { currentUser, db } = useAuth();\n    const [user,setUser ] = useState()\n    const [highScore, setHighScore] = useState()\n    const {\n        acertadaGeografia,\n        getQuestionGeografia,\n        count,\n        preguntaGeografia,\n        messageGeografia,\n        timer,\n       \n    } = useCategoria();\n\n    if (timer === 0) {\n        if(count > highScore){\n            Axios.put('http://localhost:3001/updateGeography', {\n                id: user[0]._id,\n                highScoreGeography: count\n               \n            })\n        }\n     }\n \n     useEffect( () => {\n       let dbUser = db.filter(x => x.userName === currentUser.displayName);\n         setUser(dbUser)\n         setHighScore(dbUser[0].highScoreGeography)\n \n     }, [currentUser.displayName, db])\n   \n    return (\n         <>\n            <div className='preguntas'>\n                <h2>Categor√≠a en proceso...</h2>\n            </div>\n        </>\n\n    )\n}\n\nexport default PreguntasGeografia;"]},"metadata":{},"sourceType":"module"}