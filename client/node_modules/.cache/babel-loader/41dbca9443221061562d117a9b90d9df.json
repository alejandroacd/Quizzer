{"ast":null,"code":"import _slicedToArray from\"/Users/invitado/quizzer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import'../PreguntasStyle.css';import{useCategoria}from'../../contexts/CategoriasContext';import{useAuth}from'../../contexts/AuthContext';import Axios from'axios';import FinalMessage from'../finalMessage';import CategoriasProto from'../CategoriasProto';//component \nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PreguntasDeportes=function PreguntasDeportes(){var _useAuth=useAuth(),currentUser=_useAuth.currentUser,db=_useAuth.db;var _useState=useState(),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),highScore=_useState4[0],setHighScore=_useState4[1];var _useCategoria=useCategoria(),acertadaDeportes=_useCategoria.acertadaDeportes,getQuestionDeportes=_useCategoria.getQuestionDeportes,count=_useCategoria.count,preguntaDeportes=_useCategoria.preguntaDeportes,timer=_useCategoria.timer,messageDeportes=_useCategoria.messageDeportes;if(timer===0){if(count>highScore){Axios.put('https://quizzerproject.herokuapp.com/updateSports',{id:user[0]._id,highScoreSports:count});}}useEffect(function(){var dbUser=db.filter(function(x){return x.userName===currentUser.displayName;});setUser(dbUser);setHighScore(dbUser[0].highScoreSports);},[currentUser.displayName,db]);// JSX\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"preguntas\",children:timer>0?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(CategoriasProto,{question:preguntaDeportes,getQuestion:getQuestionDeportes,acertada:acertadaDeportes,count:count})}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(FinalMessage,{count:count,message:messageDeportes})})})});};export default PreguntasDeportes;","map":{"version":3,"sources":["/Users/invitado/quizzer/client/src/Categorias/DeportesPreguntas/PreguntasDeportes.js"],"names":["React","useState","useEffect","useCategoria","useAuth","Axios","FinalMessage","CategoriasProto","PreguntasDeportes","currentUser","db","user","setUser","highScore","setHighScore","acertadaDeportes","getQuestionDeportes","count","preguntaDeportes","timer","messageDeportes","put","id","_id","highScoreSports","dbUser","filter","x","userName","displayName"],"mappings":"qJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,uBAAP,CACA,OAASC,YAAT,KAA6B,kCAA7B,CACA,OAASC,OAAT,KAAwB,4BAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,eAAP,KAA4B,oBAA5B,CAGA;gGACA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAE5B,aAA4BJ,OAAO,EAAnC,CAAQK,WAAR,UAAQA,WAAR,CAAqBC,EAArB,UAAqBA,EAArB,CACA,cAAwBT,QAAQ,EAAhC,wCAAOU,IAAP,eAAYC,OAAZ,eACA,eAAkCX,QAAQ,EAA1C,yCAAOY,SAAP,eAAkBC,YAAlB,eACA,kBAQIX,YAAY,EARhB,CAAQY,gBAAR,eAAQA,gBAAR,CACIC,mBADJ,eACIA,mBADJ,CAEIC,KAFJ,eAEIA,KAFJ,CAGIC,gBAHJ,eAGIA,gBAHJ,CAIIC,KAJJ,eAIIA,KAJJ,CAKIC,eALJ,eAKIA,eALJ,CAUA,GAAID,KAAK,GAAK,CAAd,CAAiB,CACd,GAAGF,KAAK,CAAGJ,SAAX,CAAqB,CACjBR,KAAK,CAACgB,GAAN,CAAU,mDAAV,CAA+D,CAC3DC,EAAE,CAAEX,IAAI,CAAC,CAAD,CAAJ,CAAQY,GAD+C,CAE3DC,eAAe,CAAEP,KAF0C,CAA/D,EAKH,CACH,CAEDf,SAAS,CAAC,UAAM,CACd,GAAIuB,CAAAA,MAAM,CAAIf,EAAE,CAACgB,MAAH,CAAU,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,QAAF,GAAenB,WAAW,CAACoB,WAA/B,EAAX,CAAd,CACEjB,OAAO,CAACa,MAAD,CAAP,CACAX,YAAY,CAACW,MAAM,CAAC,CAAD,CAAN,CAAUD,eAAX,CAAZ,CAEH,CALQ,CAKN,CAACf,WAAW,CAACoB,WAAb,CAA0BnB,EAA1B,CALM,CAAT,CAQA;AACA,mBACI,sCACI,YAAK,SAAS,CAAC,WAAf,UACKS,KAAK,CAAG,CAAR,cACG,sCACA,KAAC,eAAD,EAAiB,QAAQ,CAAED,gBAA3B,CAA6C,WAAW,CAAEF,mBAA1D,CAA+E,QAAQ,CAAED,gBAAzF,CAA2G,KAAK,CAAEE,KAAlH,EADA,EADH,cAKG,sCACA,KAAC,YAAD,EAAc,KAAK,CAAEA,KAArB,CAA4B,OAAO,CAAEG,eAArC,EADA,EANR,EADJ,EADJ,CAmBH,CArDD,CAuDA,cAAeZ,CAAAA,iBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../PreguntasStyle.css';\nimport { useCategoria } from '../../contexts/CategoriasContext'\nimport { useAuth } from '../../contexts/AuthContext'\nimport Axios from 'axios'\nimport FinalMessage from '../finalMessage'\nimport CategoriasProto from '../CategoriasProto'\n\n\n//component \nconst PreguntasDeportes = () => {\n\n    const { currentUser, db } = useAuth();\n    const [user,setUser ] = useState()\n    const [highScore, setHighScore] = useState()\n    const { acertadaDeportes,\n        getQuestionDeportes,\n        count,\n        preguntaDeportes,\n        timer,\n        messageDeportes,\n\n\n    } = useCategoria();\n\n    if (timer === 0) {\n       if(count > highScore){\n           Axios.put('https://quizzerproject.herokuapp.com/updateSports', {\n               id: user[0]._id,\n               highScoreSports: count\n              \n           })\n       }\n    }\n\n    useEffect(() => {\n      let dbUser =  db.filter(x => x.userName === currentUser.displayName);\n        setUser(dbUser)\n        setHighScore(dbUser[0].highScoreSports)\n\n    }, [currentUser.displayName, db])\n\n\n    // JSX\n    return (\n        <>\n            <div className='preguntas'>\n                {timer > 0 ?\n                    <>\n                    <CategoriasProto question={preguntaDeportes} getQuestion={getQuestionDeportes} acertada={acertadaDeportes} count={count} />\n                    </>\n                    :\n                    <>\n                    <FinalMessage count={count} message={messageDeportes} />\n                    </>\n                }\n\n            </div>\n           \n     \n        </>\n\n    )\n}\n\nexport default PreguntasDeportes;"]},"metadata":{},"sourceType":"module"}