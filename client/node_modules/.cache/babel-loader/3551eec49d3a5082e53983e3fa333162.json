{"ast":null,"code":"import _slicedToArray from\"/Users/invitado/quizzer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import'../PreguntasStyle.css';import{useCategoria}from'../../contexts/CategoriasContext';import{useAuth}from'../../contexts/AuthContext';import Axios from'axios';import FinalMessage from'../finalMessage';import CategoriasProto from'../CategoriasProto';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PreguntasHistoria=function PreguntasHistoria(){var _useAuth=useAuth(),currentUser=_useAuth.currentUser,db=_useAuth.db;var _useState=useState(),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),highScore=_useState4[0],setHighScore=_useState4[1];var _useCategoria=useCategoria(),acertadaHistoria=_useCategoria.acertadaHistoria,getQuestionHistoria=_useCategoria.getQuestionHistoria,preguntaHistoria=_useCategoria.preguntaHistoria,count=_useCategoria.count,timer=_useCategoria.timer,messageHistoria=_useCategoria.messageHistoria;if(timer===0){if(count>highScore){Axios.put('https://quizzerproject.herokuapp.com/updateHistory',{id:user[0]._id,highScoreHistory:count});}}useEffect(function(){var dbUser=db.filter(function(x){return x.userName===currentUser.displayName;});setUser(dbUser);setHighScore(dbUser[0].highScoreHistory);},[currentUser.displayName,db]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"preguntas\",children:timer>0?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(CategoriasProto,{question:preguntaHistoria,getQuestion:getQuestionHistoria,acertada:acertadaHistoria,count:count})}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(FinalMessage,{count:count,message:messageHistoria})})})});};export default PreguntasHistoria;","map":{"version":3,"sources":["/Users/invitado/quizzer/client/src/Categorias/HistoriaPreguntas/PreguntasHistoria.js"],"names":["React","useState","useEffect","useCategoria","useAuth","Axios","FinalMessage","CategoriasProto","PreguntasHistoria","currentUser","db","user","setUser","highScore","setHighScore","acertadaHistoria","getQuestionHistoria","preguntaHistoria","count","timer","messageHistoria","put","id","_id","highScoreHistory","dbUser","filter","x","userName","displayName"],"mappings":"qJAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAO,uBAAP,CACA,OAASC,YAAT,KAA6B,kCAA7B,CACA,OAASC,OAAT,KAAwB,4BAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,eAAP,KAA4B,oBAA5B,C,gGAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAE5B,aAA4BJ,OAAO,EAAnC,CAAQK,WAAR,UAAQA,WAAR,CAAqBC,EAArB,UAAqBA,EAArB,CACA,cAAwBT,QAAQ,EAAhC,wCAAOU,IAAP,eAAYC,OAAZ,eACA,eAAkCX,QAAQ,EAA1C,yCAAOY,SAAP,eAAkBC,YAAlB,eACA,kBAQSX,YAAY,EARrB,CACKY,gBADL,eACKA,gBADL,CAEKC,mBAFL,eAEKA,mBAFL,CAGKC,gBAHL,eAGKA,gBAHL,CAIKC,KAJL,eAIKA,KAJL,CAKKC,KALL,eAKKA,KALL,CAMKC,eANL,eAMKA,eANL,CAUK,GAAID,KAAK,GAAK,CAAd,CAAiB,CACd,GAAGD,KAAK,CAAGL,SAAX,CAAqB,CACjBR,KAAK,CAACgB,GAAN,CAAU,oDAAV,CAAgE,CAC5DC,EAAE,CAAEX,IAAI,CAAC,CAAD,CAAJ,CAAQY,GADgD,CAE5DC,gBAAgB,CAAEN,KAF0C,CAAhE,EAKH,CACH,CAEDhB,SAAS,CAAC,UAAM,CACd,GAAIuB,CAAAA,MAAM,CAAGf,EAAE,CAACgB,MAAH,CAAU,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,QAAF,GAAenB,WAAW,CAACoB,WAA/B,EAAX,CAAb,CACEjB,OAAO,CAACa,MAAD,CAAP,CACAX,YAAY,CAACW,MAAM,CAAC,CAAD,CAAN,CAAUD,gBAAX,CAAZ,CAEH,CALQ,CAKN,CAACf,WAAW,CAACoB,WAAb,CAA0BnB,EAA1B,CALM,CAAT,CAOA,mBACG,sCACG,YAAK,SAAS,CAAC,WAAf,UACKS,KAAK,CAAG,CAAR,cACG,sCACA,KAAC,eAAD,EAAiB,QAAQ,CAAEF,gBAA3B,CAA6C,WAAW,CAAED,mBAA1D,CAA+E,QAAQ,CAAED,gBAAzF,CAA2G,KAAK,CAAEG,KAAlH,EADA,EADH,cAKG,sCACA,KAAC,YAAD,EAAc,KAAK,CAAEA,KAArB,CAA4B,OAAO,CAAEE,eAArC,EADA,EANR,EADH,EADH,CAiBR,CAjDD,CAmDA,cAAeZ,CAAAA,iBAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport '../PreguntasStyle.css';\nimport { useCategoria } from '../../contexts/CategoriasContext'\nimport { useAuth } from '../../contexts/AuthContext';\nimport Axios from 'axios'\nimport FinalMessage from '../finalMessage'\nimport CategoriasProto from '../CategoriasProto'\n\nconst PreguntasHistoria = () => {\n\n    const { currentUser, db } = useAuth();\n    const [user,setUser ] = useState()\n    const [highScore, setHighScore] = useState()\n    const { \n         acertadaHistoria,\n         getQuestionHistoria,\n         preguntaHistoria,\n         count,\n         timer,\n         messageHistoria,\n         \n         } = useCategoria();\n\n         if (timer === 0) {\n            if(count > highScore){\n                Axios.put('https://quizzerproject.herokuapp.com/updateHistory', {\n                    id: user[0]._id,\n                    highScoreHistory: count\n                   \n                })\n            }\n         }\n     \n         useEffect(() => {\n           let dbUser = db.filter(x => x.userName === currentUser.displayName);\n             setUser(dbUser)\n             setHighScore(dbUser[0].highScoreHistory)\n     \n         }, [currentUser.displayName, db])\n\n         return (\n            <>\n               <div className='preguntas'>\n                   {timer > 0 ?\n                       <>\n                       <CategoriasProto question={preguntaHistoria} getQuestion={getQuestionHistoria} acertada={acertadaHistoria} count={count} />\n                       </>\n                       :\n                       <>\n                       <FinalMessage count={count} message={messageHistoria} />\n                       </>\n                   }\n   \n               </div>\n           </>\n   \n       )\n}\n\nexport default PreguntasHistoria"]},"metadata":{},"sourceType":"module"}